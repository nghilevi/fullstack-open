{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/Form.js","components/Notification.js","services/PeopleService.js","App.js","index.js"],"names":["Filter","handleFilter","onChange","Person","person","handleRemove","name","number","onClick","window","confirm","id","Persons","list","value","persons","searchValue","populatePersonRow","key","filter","toUpperCase","map","Form","newName","newNumber","onSubmit","handleNameChange","handleNumberChange","type","commonStyle","borderRadius","padding","width","margin","addSuccessStyle","color","backgroundColor","border","addFailStyle","Notification","message","data","style","className","baseUrl","axios","get","then","response","newPerson","post","delete","updatedPerson","put","App","useState","setPersons","setNewName","setNewNumber","setSearchValue","setMessage","useEffect","peopleService","personsData","showNotfication","setTimeout","evt","target","event","preventDefault","found","find","catch","err","concat","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,EAVA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEb,OACI,mDACqB,2BAAOC,SAAUD,MCS/BE,EAbA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAQrB,OACI,2BAAID,EAAOE,KAAX,IAAkBF,EAAOG,OAAzB,IAAiC,4BAAQC,QAPxB,WACbC,OAAOC,QAAP,iBAAyBN,EAAOE,KAAhC,OACAD,EAAaD,EAAOO,MAKS,YCS1BC,EAjBC,SAAC,GAA0C,IAEhCC,EAAMC,EAFfC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,YAAaX,EAAkB,EAAlBA,aAM9BY,EAAoB,SAACb,GAAD,OAAY,kBAAC,EAAD,CAAQc,IAAKd,EAAOE,KAAMF,OAAQA,EAAQC,aAAcA,KAE9F,OACI,oCAEIW,GATeH,EASaE,EATPD,EASgBE,EARlCH,EAAKM,QAAO,SAAAf,GAAM,OAAIA,EAAOE,KAAKc,gBAAkBN,EAAMM,kBAQXC,IAAIJ,GAAqBF,EAAQM,IAAIJ,KCEpFK,EAdF,SAAC,GAA0E,IAAzEC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,UAAWC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,iBAAkBC,EAAwB,EAAxBA,mBAC3D,OACI,0BAAMF,SAAUA,GACZ,sCACM,2BAAOX,MAAOS,EAASrB,SAAUwB,KAEvC,wCAAa,2BAAOZ,MAAOU,EAAWtB,SAAUyB,KAChD,6BACA,4BAAQC,KAAK,UAAb,U,OCRNC,EAAc,CAChBC,aAAc,MACdC,QAAS,OACTC,MAAO,MACPC,OAAQ,YAGNC,EAAe,2BACdL,GADc,IAEjBM,MAAO,QACPC,gBAAiB,UACjBC,OAAQ,oBAGNC,EAAY,2BACXT,GADW,IAEdM,MAAO,MACPC,gBAAiB,UACjBC,OAAQ,kBAmBGE,EAhBM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEZZ,EAAcY,EAAdZ,KAAMa,EAAQD,EAARC,KAEb,OAAKb,EAKD,yBAAKc,MAAgB,YAATd,EAAqBM,EAAkBI,EAAcK,UAAU,eAC7D,YAATf,EAAA,gBAA8Ba,GAA9B,yBAAyDA,EAAzD,sBALE,M,gBCzBTG,EAAU,eA0BD,EAxBA,WACX,OAAOC,IACFC,IAAIF,GACJG,MAAK,SAAAC,GACF,OAAOA,EAASP,KAAK1B,YAoBlB,EAhBA,SAACkC,GACZ,OAAOJ,IACJK,KAAKN,EAASK,IAcN,EAXA,SAACtC,GACZ,OAAOkC,IACJM,OADI,UACMP,EADN,YACiBjC,KASb,EANA,SAACA,EAAIyC,GAChB,OAAOP,IACJQ,IADI,UACGT,EADH,YACcjC,GAAKyC,GACvBL,MAAK,SAACC,GAAD,OAAcA,EAASP,SCuEpBa,EAxFH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRxC,EADQ,KACCyC,EADD,OAEgBD,mBAAS,IAFzB,mBAERhC,EAFQ,KAECkC,EAFD,OAGoBF,mBAAS,IAH7B,mBAGR/B,EAHQ,KAGGkC,EAHH,OAIuBH,mBAAS,IAJhC,mBAIRvC,EAJQ,KAIK2C,EAJL,OAKeJ,mBAAS,IALxB,mBAKRf,EALQ,KAKCoB,EALD,KAOhBC,qBAAU,WACRC,IAAuBf,MAAK,SAAAgB,GAAW,OAAIP,EAAWO,QACrD,IAEH,IAsCMC,EAAkB,SAACxB,GACvBoB,EAAWpB,GACXyB,YAAY,kBAAML,EAAW,MAAK,MAqBpC,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcpB,QAASA,IACvB,kBAAC,EAAD,CAAQvC,aAdS,SAACiE,GACpBP,EAAeO,EAAIC,OAAOrD,UAcxB,kBAAC,EAAD,CAAMS,QAASA,EACfC,UAAWA,EACXC,SApEc,SAAC2C,GACjBA,EAAMC,iBACN,IAAMpB,EAAY,CAAC3C,KAAMiB,EAAShB,OAAQiB,GACpC8C,EAAQvD,EAAQwD,MAAK,SAACnE,GAAD,OAAYA,EAAOE,OAASiB,KACpD+C,EACE7D,OAAOC,QAAP,UAAkBa,EAAlB,8EACDuC,EAAqBQ,EAAM3D,GAAIsC,GAAWF,MAAK,SAACK,GAC9CI,EAAWzC,EAAQM,KAAK,SAAAjB,GACtB,OAAGA,EAAOE,OAAS8C,EAAc9C,KACxB8C,EAEFhD,MAET4D,EAAgB,CACdvB,KAAMQ,EAAU3C,KAChBsB,KAAM,eAGT4C,OAAO,SAACC,GACPT,EAAgB,CACdvB,KAAMQ,EAAU3C,KAChBsB,KAAM,WAKZkC,EAAqBb,GAAWF,MAAK,WACnCS,EAAWzC,EAAQ2D,OAAO,CAACzB,KAC3Be,EAAgB,CACdvB,KAAMQ,EAAU3C,KAChBsB,KAAM,eAIZ6B,EAAW,IACXC,EAAa,KAkCXhC,iBA1BqB,SAAC0C,GACxBX,EAAWW,EAAMD,OAAOrD,QA0BtBa,mBAvBuB,SAACyC,GAC1BV,EAAaU,EAAMD,OAAOrD,UAuBxB,uCACA,kBAAC,EAAD,CAASC,QAASA,EAASC,YAAaA,EAAaX,aAjBpC,SAACM,GACpBmD,EAAqBnD,GAAIoC,MAAK,WAC5BS,EAAWzC,EAAQI,QAAQ,SAACf,GAAD,OAAYA,EAAOO,KAAOA,cCzE3DgE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9969f78d.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Filter = ({handleFilter}) => {\n\n    return (\n        <div>\n          filter shown with: <input onChange={handleFilter} />\n        </div>\n    )\n\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = ({person, handleRemove}) => {\n\n    const deletePerson = () => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            handleRemove(person.id)\n        }\n    }\n\n    return (\n        <p>{person.name} {person.number} <button onClick={deletePerson}>delete</button></p>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, searchValue, handleRemove}) => {\n\n    const filterPersons = (list, value) => {\n        return list.filter(person => person.name.toUpperCase() === value.toUpperCase())\n    }\n    \n    const populatePersonRow = (person) => <Person key={person.name} person={person} handleRemove={handleRemove} />\n\n    return (\n        <>\n        {\n            searchValue ? filterPersons(persons, searchValue).map(populatePersonRow) : persons.map(populatePersonRow)\n        }\n        </>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Form = ({newName, newNumber, onSubmit, handleNameChange, handleNumberChange}) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n            name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>number: <input value={newNumber} onChange={handleNumberChange}  /></div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n      </form>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst commonStyle = {\n    borderRadius: '5px',\n    padding: '10px',\n    width: '50%',\n    margin: '10px 5px'\n}\n\nconst addSuccessStyle = {\n    ...commonStyle,\n    color: 'green',\n    backgroundColor: '#cecece',\n    border: '1px solid green'\n}\n\nconst addFailStyle = {\n    ...commonStyle,\n    color: 'red',\n    backgroundColor: '#cecece',\n    border: '1px solid red'\n}\n\nconst Notification = ({message}) => {\n    \n    const {type, data} = message\n    \n    if (!type) {\n        return null\n    }\n    \n    return (\n        <div style={type === 'success' ? addSuccessStyle : addFailStyle} className=\"add-success\">\n            {type === 'success' ? `added ${data}` : `information of ${data} has been removed` }\n        </div>\n    )\n\n}\n\nexport default Notification","import React from 'react'\nimport axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => {\n            return response.data.persons\n        })\n}\n\nconst create = (newPerson) => {\n    return axios\n      .post(baseUrl, newPerson)\n}\n\nconst remove = (id) => {\n    return axios\n      .delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, updatedPerson) => {\n    return axios\n      .put(`${baseUrl}/${id}`,updatedPerson)\n      .then((response) => response.data)\n}\n\nexport default {getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport Form from './components/Form'\nimport Notification from './components/Notification'\n\nimport peopleService from './services/PeopleService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchValue, setSearchValue] = useState('');\n  const [ message, setMessage] = useState({});\n\n  useEffect(() => {\n    peopleService.getAll().then(personsData => setPersons(personsData))\n  }, [])\n    \n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {name: newName, number: newNumber}\n    const found = persons.find((person) => person.name === newName )\n    if(found){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)){\n        peopleService.update(found.id, newPerson).then((updatedPerson) => {\n          setPersons(persons.map( person => {\n            if(person.name === updatedPerson.name){\n              return updatedPerson\n            }\n            return person\n          }))\n          showNotfication({\n            data: newPerson.name,\n            type: 'success'\n          })\n        })\n        .catch( (err) => {\n          showNotfication({\n            data: newPerson.name,\n            type: 'err'\n          })\n        })\n      }\n    }else{\n      peopleService.create(newPerson).then(() => {\n        setPersons(persons.concat([newPerson]))\n        showNotfication({\n          data: newPerson.name,\n          type: 'success'\n        })\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const showNotfication = (message) => {\n    setMessage(message)\n    setTimeout( () => setMessage(''), 2000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (evt) => {\n    setSearchValue(evt.target.value)\n  }\n\n  const handleRemove = (id) => {\n    peopleService.remove(id).then(() => {\n      setPersons(persons.filter( (person) => person.id !== id))\n    })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter handleFilter={handleFilter}/>\n      <Form newName={newName} \n      newNumber={newNumber} \n      onSubmit={addPerson} \n      handleNameChange={handleNameChange} \n      handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} searchValue={searchValue} handleRemove={handleRemove} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}